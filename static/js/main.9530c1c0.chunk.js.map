{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","titleIsValid","imgUrlIsValid","imdbUrIsValid","imdbIdIsValid","btnIsDisabled","handleSubmit","event","preventDefault","onAdd","props","regex","setState","test","toLocaleLowerCase","handleChange","target","name","value","handleBlur","this","onSubmit","classNames","type","placeholder","onChange","onBlur","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9530c1c0.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  onAdd: (arg: Movie) => void,\n};\ntype State = {\n  movie: {\n    title: string,\n    description: string,\n    imgUrl: string,\n    imdbUrl: string,\n    imdbId: string,\n  },\n\n  titleIsValid: boolean,\n  imdbUrIsValid: boolean,\n  imdbIdIsValid: boolean,\n  imgUrlIsValid: boolean,\n\n  btnIsDisabled: boolean,\n\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    movie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n\n    titleIsValid: true,\n    imgUrlIsValid: true,\n    imdbUrIsValid: true,\n    imdbIdIsValid: true,\n\n    btnIsDisabled: false,\n\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const { onAdd } = this.props;\n    const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.movie;\n\n    if (title === '') {\n      this.setState(state => ({\n        ...state,\n        titleIsValid: false,\n      }\n      ));\n    }\n\n    if (!regex.test(imgUrl.toLocaleLowerCase())) {\n      this.setState(state => ({\n        ...state,\n        imgUrlIsValid: false,\n      }\n      ));\n    }\n\n    if (!regex.test(imdbUrl.toLocaleLowerCase())) {\n      this.setState(state => ({\n        ...state,\n        imdbUrIsValid: false,\n      }\n      ));\n    }\n\n    if (imdbId === '') {\n      this.setState(state => ({\n        ...state,\n        imdbIdIsValid: false,\n      }\n      ));\n    }\n\n    const {\n      titleIsValid,\n      imgUrlIsValid,\n      imdbUrIsValid,\n      imdbIdIsValid,\n    } = this.state;\n\n    if (titleIsValid === true\n        && imgUrlIsValid === true\n        && imdbUrIsValid === true\n        && imdbIdIsValid === true\n    ) {\n      onAdd(this.state.movie);\n\n      this.setState({\n        movie: {\n          title: '',\n          description: '',\n          imgUrl: '',\n          imdbUrl: '',\n          imdbId: '',\n        },\n\n        titleIsValid: true,\n        imgUrlIsValid: true,\n        imdbUrIsValid: true,\n        imdbIdIsValid: true,\n\n        btnIsDisabled: false,\n\n      });\n    } else {\n      this.setState(state => ({\n        ...state,\n        btnIsDisabled: true,\n      }));\n    }\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      movie: {\n        ...state.movie,\n        [name]: value,\n      },\n    }));\n  };\n\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.movie;\n\n    const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    switch (event.target.name) {\n      case 'title': {\n        if (title !== '') {\n          this.setState(state => ({\n            ...state,\n            titleIsValid: true,\n            btnIsDisabled: false,\n          }\n          ));\n        }\n\n        if (title === '') {\n          this.setState(state => ({\n            ...state,\n            titleIsValid: false,\n            btnIsDisabled: false,\n          }\n          ));\n        }\n\n        break;\n      }\n\n      case 'imgUrl': {\n        if (regex.test(imgUrl.toLocaleLowerCase())) {\n          this.setState(state => ({\n            ...state,\n            imgUrlIsValid: true,\n            btnIsDisabled: false,\n          }\n          ));\n        }\n\n        if (!regex.test(imgUrl.toLocaleLowerCase())) {\n          this.setState(state => ({\n            ...state,\n            imgUrlIsValid: false,\n            btnIsDisabled: false,\n          }\n          ));\n        }\n\n        break;\n      }\n\n      case 'imdbUrl': {\n        if (regex.test(imdbUrl.toLocaleLowerCase())) {\n          this.setState(state => ({\n            ...state,\n            imdbUrIsValid: true,\n            btnIsDisabled: false,\n          }\n          ));\n        }\n\n        if (!regex.test(imdbUrl.toLocaleLowerCase())) {\n          this.setState(state => ({\n            ...state,\n            imdbUrIsValid: false,\n            btnIsDisabled: false,\n          }\n          ));\n        }\n\n        break;\n      }\n\n      case 'imdbId': {\n        if (imdbId !== '') {\n          this.setState(state => ({\n            ...state,\n            imdbIdIsValid: true,\n            btnIsDisabled: false,\n          }\n          ));\n        }\n\n        if (imdbId === '') {\n          this.setState(state => ({\n            ...state,\n            imdbIdIsValid: false,\n            btnIsDisabled: false,\n          }\n          ));\n        }\n\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.movie;\n\n    const {\n      titleIsValid,\n      imgUrlIsValid,\n      imdbUrIsValid,\n      imdbIdIsValid,\n      btnIsDisabled,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n      >\n        <h2 className=\"form-title\">Enter the details of the new movie</h2>\n        <input\n          className={classNames('form-input', { 'form-input--error': (!titleIsValid) })}\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n        />\n        {(!titleIsValid) && <p className=\"form-input__error-message\">Enter data in the field above</p>}\n\n        <input\n          className=\"form-input\"\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={this.handleChange}\n        />\n\n        <input\n          className={classNames('form-input', { 'form-input--error': (!imgUrlIsValid) })}\n          type=\"text\"\n          name=\"imgUrl\"\n          placeholder=\"imgUrl\"\n          value={imgUrl}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n        />\n        {(!imgUrlIsValid) && <p className=\"form-input__error-message\">Enter data in the field above</p>}\n\n        <input\n          className={classNames('form-input', { 'form-input--error': (!imdbUrIsValid) })}\n          type=\"text\"\n          name=\"imdbUrl\"\n          placeholder=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n        />\n        {(!imdbUrIsValid) && <p className=\"form-input__error-message\">Enter data in the field above</p>}\n\n        <input\n          className={classNames('form-input', { 'form-input--error': (!imdbIdIsValid) })}\n          type=\"text\"\n          name=\"imdbId\"\n          placeholder=\"imdbId\"\n          value={imdbId}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n        />\n        {(!imdbIdIsValid) && <p className=\"form-input__error-message\">Enter data in the field above</p>}\n\n        <button\n          className=\"form-btn\"\n          type=\"submit\"\n          disabled={btnIsDisabled}\n        >\n          SUBMIT\n        </button>\n\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}